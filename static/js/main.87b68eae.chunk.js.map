{"version":3,"sources":["components/Dashboard/Dashboard.module.css","components/Balance/Balance.module.css","components/TransactionHistory/TransactionHistory.module.css","components/Controls/Controls.module.css","components/Controls/Controls.js","components/Balance/Balance.js","components/TransactionHistory/TransactionHistory.js","components/Dashboard/Dashboard.js","App.js","index.js"],"names":["module","exports","Controls","transaction","handleChange","addMoney","withdrawMoney","className","design","controls","controlsBlock","type","name","onChange","value","button","onClick","Balance","topUp","withdrawal","balance","TransactionHistory","items","history","map","item","key","id","amount","date","Dashboard","state","inputValue","transactions","notifySuccess","toast","containerId","notifyUnsuccess","e","setState","target","moneyOnDeposit","shortid","generate","Date","toLocaleString","push","filterTopUps","filter","Number","filterWithdrawals","withdrawAmount","length","reduce","a","b","withdrawalSummary","topUpsAmount","this","dashboard","onAddTransaction","addTransaction","autoClose","transition","Flip","Component","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.87b68eae.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dashboard\":\"Dashboard_dashboard__1uc7L\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"balance\":\"Balance_balance__2XLfJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"history\":\"TransactionHistory_history__BDIOM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"controls\":\"Controls_controls__19ESJ\",\"button\":\"Controls_button__2JHI9\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport design from './Controls.module.css';\n\nconst Controls = ({ transaction, handleChange, addMoney, withdrawMoney }) => {\n  return (\n    <section className={design.controls}>\n      <div className={design.controlsBlock}>\n        <input\n          type=\"number\"\n          name=\"inputValue\"\n          onChange={handleChange}\n          value={transaction}\n        />\n        <button className={design.button} type=\"button\" onClick={addMoney}>\n          Deposit\n        </button>\n        <button type=\"button\" className={design.button} onClick={withdrawMoney}>\n          Withdraw\n        </button>\n      </div>\n    </section>\n  );\n};\n\nControls.propTypes = {\n  transaction: PropTypes.string.isRequired,\n  handleChange: PropTypes.func.isRequired,\n  addMoney: PropTypes.func.isRequired,\n  withdrawMoney: PropTypes.func.isRequired,\n};\n\nexport default Controls;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport design from './Balance.module.css';\n\nconst Balance = ({ topUp, withdrawal, balance }) => {\n  return (\n    <section className={design.balance}>\n      <span> &uArr; {topUp}$</span>\n      <span> &dArr; {withdrawal}$</span>\n      <span>Balance: {balance}$</span>\n    </section>\n  );\n};\n\nBalance.propTypes = {\n  topUp: PropTypes.number.isRequired,\n  withdrawal: PropTypes.number.isRequired,\n  balance: PropTypes.number.isRequired,\n};\n\nexport default Balance;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport design from './TransactionHistory.module.css';\n\nconst TransactionHistory = ({ items }) => {\n  return (\n    <table className={design.history}>\n      <thead>\n        <tr>\n          <th>Transaction</th>\n          <th>Amount</th>\n          <th>Date</th>\n        </tr>\n      </thead>\n      <tbody>\n        {items.map(item => (\n          <tr key={item.id}>\n            <td>{item.type}</td>\n            <td>{item.amount}$</td>\n            <td>{item.date}</td>\n          </tr>\n        ))}\n      </tbody>\n    </table>\n  );\n};\n\nTransactionHistory.propTypes = {\n  items: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      type: PropTypes.string.isRequired,\n      amount: PropTypes.string.isRequired,\n      date: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n\nexport default TransactionHistory;\n","import React, { Component } from 'react';\nimport shortid from 'shortid';\nimport { ToastContainer, toast, Flip } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport design from './Dashboard.module.css';\nimport Controls from '../Controls/Controls';\nimport Balance from '../Balance/Balance';\nimport TransactionHistory from '../TransactionHistory/TransactionHistory';\n\nexport default class Dashboard extends Component {\n  state = {\n    inputValue: '',\n    transactions: [],\n    topUp: 0,\n    withdrawal: 0,\n    balance: 0,\n  };\n\n  // notifications\n  notifySuccess = () =>\n    toast(\n      'Incorrect amount was entered. Enter a number above 0 and try again',\n      { containerId: 'A' },\n    );\n\n  notifyUnsuccess = () =>\n    toast(\n      'Not enough money on your account! The requested amount cannot be withdrawn!',\n      { containerId: 'A' },\n    );\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value,\n    });\n  };\n\n  // topUp function block\n  addMoney = () => {\n    if (\n      this.state.inputValue === '0' ||\n      this.state.inputValue === '' ||\n      this.state.inputValue < 0\n    ) {\n      this.notifySuccess();\n      return;\n    }\n\n    const moneyOnDeposit = {\n      amount: this.state.inputValue,\n      id: shortid.generate(),\n      type: 'Deposit',\n      date: new Date().toLocaleString(),\n    };\n    this.state.transactions.push(moneyOnDeposit);\n\n    const { transactions } = this.state;\n\n    const filterTopUps = transactions\n      .filter(item => item.type === 'Deposit')\n      .map(item => Number(item.amount));\n\n    const filterWithdrawals = transactions\n      .filter(item => item.type === 'Withdraw')\n      .map(item => Number(item.amount));\n\n    let withdrawAmount = 0;\n    if (filterWithdrawals.length > 0) {\n      withdrawAmount = filterWithdrawals.reduce((a, b) => a + b);\n    }\n    this.setState({\n      balance: filterTopUps.reduce((a, b) => a + b) - withdrawAmount,\n      topUp: filterTopUps.reduce((a, b) => a + b),\n    });\n  };\n\n  // withdrawal function block\n  withdrawMoney = () => {\n    if (\n      this.state.inputValue === '0' ||\n      this.state.inputValue === '' ||\n      this.state.inputValue < 0\n    ) {\n      this.notifySuccess();\n      return;\n    }\n\n    const withdrawalSummary = {\n      amount: this.state.inputValue,\n      id: shortid.generate(),\n      type: 'Withdraw',\n      date: new Date().toLocaleString(),\n    };\n    this.state.transactions.push(withdrawalSummary);\n\n    const { transactions } = this.state;\n\n    const filterTopUps = transactions\n      .filter(item => item.type === 'Deposit')\n      .map(item => Number(item.amount));\n\n    const filterWithdrawals = transactions\n      .filter(item => item.type === 'Withdraw')\n      .map(item => Number(item.amount));\n\n    let topUpsAmount = 0;\n    if (filterTopUps.length > 0) {\n      topUpsAmount = filterTopUps.reduce((a, b) => a + b);\n    }\n    if (topUpsAmount - filterWithdrawals.reduce((a, b) => a + b) < 0) {\n      this.notifyUnsuccess();\n      return;\n    }\n\n    this.setState({\n      balance: topUpsAmount - filterWithdrawals.reduce((a, b) => a + b),\n      withdrawal: filterWithdrawals.reduce((a, b) => a + b),\n    });\n  };\n\n  // rendering block\n  render() {\n    const { inputValue, transactions, topUp, withdrawal, balance } = this.state;\n\n    return (\n      <div className={design.dashboard}>\n        <Controls\n          handleChange={this.handleChange}\n          transaction={inputValue}\n          withdrawMoney={this.withdrawMoney}\n          onAddTransaction={this.addTransaction}\n          addMoney={this.addMoney}\n        />\n        <ToastContainer autoClose={2500} transition={Flip} />\n        <Balance\n          topUp={topUp}\n          items={transactions}\n          balance={balance}\n          withdrawal={withdrawal}\n        />\n        <TransactionHistory items={transactions} />\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport './App.css';\nimport Dashboard from './components/Dashboard/Dashboard';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Dashboard />\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n\n"],"sourceRoot":""}